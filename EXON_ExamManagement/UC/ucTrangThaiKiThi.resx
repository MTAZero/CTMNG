<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>